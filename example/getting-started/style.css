/* app/style.css */

:root {
	--chat-grid-areas: "messages messages" "input input";
	--chat-grid-rows: 1fr auto;
	--chat-grid-cols: 1fr;

	--message-spacing: clamp(var(--space-xs), 2vw, var(--space-sm));
	--input-height: clamp(120px, 15vh, 180px);
	--error-panel-height: clamp(100px, 12vh, 140px);

	/* State-specific colors for error recovery visualization */
	--state-compose: var(--color-accent);
	--state-streaming: var(--color-success);
	--state-error: var(--color-error);
}

/* Main App Container */
.example-app {
	width: var(--widget-width);
	height: var(--widget-height);
	background: var(--color-surface);
	border: 1px solid var(--color-border);
	border-radius: var(--radius);
	padding: var(--widget-padding);

	display: grid;
	grid-template-areas: var(--chat-grid-areas);
	grid-template-rows: var(--chat-grid-rows);
	grid-template-columns: var(--chat-grid-cols);
	gap: var(--space-md);

	/* Grid line names for semantic layout */
	grid-template-rows:
		[messages-start] 1fr [messages-end input-start]
		auto [input-end];
}

/* Messages Area */
.example-app > ul {
	grid-area: messages;
	list-style: none;
	margin: 0;
	padding: 0;
	overflow-y: auto;

	display: grid;
	grid-template-columns: [message-start] 1fr [message-end];
	gap: var(--message-spacing);
	align-content: start;

	background: rgba(255, 255, 255, 0.02);
	border-radius: var(--radius);
	padding: var(--space-md);
}

.example-app > ul > li {
	grid-column: message-start / message-end;
	padding: var(--space-sm);
	background: var(--color-bg);
	border-radius: var(--radius);
	color: var(--color-text);
	word-wrap: break-word;
	border-left: 3px solid var(--color-accent);
}

/* Input Area - Compose State */
.example-app form {
	grid-area: input;
	display: grid;
	grid-template-areas:
		"textarea textarea"
		"spacer submit";
	grid-template-rows:
		[textarea-start] 1fr [textarea-end button-start]
		auto [button-end];
	grid-template-columns: [start] 1fr [button-start] auto [end];
	gap: var(--space-sm);

	min-height: var(--input-height);
	border: 2px solid var(--state-compose);
	border-radius: var(--radius);
	padding: var(--space-md);
	background: rgba(59, 130, 246, 0.05);
}

.example-app form textarea {
	grid-area: textarea;
	background: var(--color-bg);
	border: 1px solid var(--color-border);
	border-radius: var(--radius);
	color: var(--color-text);
	padding: var(--space-sm);
	font-family: inherit;
	resize: vertical;
	min-height: clamp(60px, 8vh, 100px);
}

.example-app form textarea:focus {
	outline: none;
	border-color: var(--state-compose);
}

.example-app form button[type="submit"] {
	grid-area: submit;
	align-self: end;
	background: var(--state-compose);
	border: none;
	border-radius: var(--radius);
	color: white;
	padding: var(--space-sm) var(--space-lg);
	font-family: inherit;
	cursor: pointer;
	transition: opacity 0.2s;
}

.example-app form button[type="submit"]:hover {
	opacity: 0.8;
}

/* Streaming State */
.example-app output {
	grid-area: input;
	background: rgba(34, 197, 94, 0.1);
	border: 2px solid var(--state-streaming);
	border-radius: var(--radius);
	padding: var(--space-md);
	color: var(--color-text);
	min-height: var(--input-height);
	overflow-y: auto;

	display: grid;
	align-content: start;

	font-family: inherit;
	white-space: pre-wrap;
	word-wrap: break-word;
}

.example-app output::before {
	content: "ðŸ”„ Streaming...";
	color: var(--state-streaming);
	font-size: 0.875rem;
	margin-bottom: var(--space-xs);
	display: block;
	opacity: 0.8;
}

/* Error State */
.example-app section {
	grid-area: input;
	background: rgba(239, 68, 68, 0.1);
	border: 2px solid var(--state-error);
	border-radius: var(--radius);
	padding: var(--space-md);

	display: grid;
	grid-template-areas:
		"error-header"
		"error-output";
	grid-template-rows:
		[header-start] auto [header-end output-start]
		1fr [output-end];
	gap: var(--space-sm);

	min-height: var(--input-height);
}

.example-app section > header {
	grid-area: error-header;
	display: grid;
	grid-template-areas: "message actions";
	grid-template-columns: [message-start] 1fr [actions-start] auto [actions-end];
	gap: var(--space-md);
	align-items: center;
}

.example-app section > header > p {
	grid-area: message;
	margin: 0;
	color: var(--state-error);
	font-weight: 500;
	font-size: 0.875rem;
}

.example-app section > header > nav {
	grid-area: actions;
	display: grid;
	grid-template-columns: repeat(2, auto);
	gap: var(--space-xs);
}

.example-app section > header button {
	background: transparent;
	border: 1px solid var(--color-border);
	border-radius: var(--radius);
	color: var(--color-text);
	padding: var(--space-xs) var(--space-sm);
	font-family: inherit;
	font-size: 0.875rem;
	cursor: pointer;
	transition: all 0.2s;
}

.example-app section > header button:hover {
	border-color: var(--state-error);
	color: var(--state-error);
}

.example-app section > header button:first-child {
	background: var(--state-error);
	color: white;
	border-color: var(--state-error);
}

.example-app section > header button:first-child:hover {
	opacity: 0.8;
	color: white;
}

.example-app section > output {
	grid-area: error-output;
	background: var(--color-bg);
	border: 1px solid var(--color-border);
	min-height: auto;
	border-color: rgba(239, 68, 68, 0.3);
}

.example-app section > output::before {
	content: "! Partial Response:";
	color: var(--state-error);
}

/* Responsive adjustments for StackBlitz split panel */
@media (max-width: 768px) {
	.example-app {
		--widget-padding: var(--space-sm);
		gap: var(--space-sm);
	}

	.example-app form {
		grid-template-areas:
			"textarea"
			"submit";
		grid-template-columns: 1fr;
	}

	.example-app section > header {
		grid-template-areas:
			"message"
			"actions";
		grid-template-columns: 1fr;
		gap: var(--space-sm);
	}

	.example-app section > header > nav {
		justify-self: start;
	}
}

/* Focus states for accessibility */
.example-app button:focus-visible,
.example-app textarea:focus-visible {
	outline: 2px solid var(--color-accent);
	outline-offset: 2px;
}
